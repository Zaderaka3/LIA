/*
  This code controls a line-following robot using three sensors (left, middle, right).
  The robot can move forward, turn left or right, stop, and enter a search mode if it loses the line.
  The search mode initiates a sequence of movements to reacquire the line.
*/

int speed = 50;                    // Default motor speed
unsigned long searchStartTime = 0; // Timestamp when search mode starts
bool searching = false;            // Flag to indicate if the robot is in search mode

void setup() {
  Serial.begin(9600);             // Initialize serial communication for debugging
  // Motor control pins
  pinMode(7, OUTPUT);             // Left motor direction pin
  pinMode(6, OUTPUT);             // PWM control for left motor speed
  pinMode(8, OUTPUT);             // Right motor direction pin
  pinMode(5, OUTPUT);             // PWM control for right motor speed
  pinMode(3, OUTPUT);             // Motor enable pin
}

void loop() {
  // Read analog values from line sensors
  int leftValue = analogRead(A2);
  int middleValue = analogRead(A1);
  int rightValue = analogRead(A0);

  // Print sensor values for debugging
  Serial.print("Left =  ");
  Serial.print(leftValue);
  Serial.print("\t Middle =  ");
  Serial.print(middleValue);
  Serial.print("\t Right =  ");
  Serial.println(rightValue);

  // Decision-making based on sensor values
  if (leftValue >= 1000 && middleValue >= 1000 && rightValue >= 1000) {
    Stop(); // All sensors detect a line; stop the robot
  } else if (middleValue >= 750 && middleValue <= 790) {
    Forward(); // Middle sensor detects line; move forward
  } else if (rightValue >= 800 && rightValue <= 860 && middleValue <= 750) {
    Right(); // Right sensor detects line; turn right
  } else if (leftValue >= 800 && leftValue <= 860 && middleValue <= 750) {
    Left(); // Left sensor detects line; turn left
  } else if (leftValue <= 60 && middleValue <= 60 && rightValue <= 60) {
    enterSearchMode(); // No line detected; enter search mode
  } else {
    if (searching) {
      exitSearchMode(); // Exit search mode if conditions are met
    }
  }
}

void enterSearchMode() {
  if (!searching) {
    searching = true;           // Set search mode flag
    searchStartTime = millis(); // Record start time of search mode
    speed = 80;                 // Increase speed for searching
  }
  unsigned long elapsedTime = millis() - searchStartTime;
  // Define search pattern based on elapsed time
  if (elapsedTime <= 900) {
    Right(); // Turn right for 900 ms
  } else if (elapsedTime <= 2100) {
    Left(); // Turn left for 1200 ms
  } else if (elapsedTime <= 3000) {
    Right(); // Turn right again for 900 ms
  } else {
    Stop(); // Stop after completing the search pattern
    searchStartTime = millis(); // Reset search time
  }
}

void exitSearchMode() {
  searching = false;        // Clear search mode flag
  searchStartTime = 0;      // Reset search time
  speed = 50;               // Reset speed to default
}

void Forward() {
  digitalWrite(8, HIGH);    // Set right motor to forward direction
  analogWrite(5, speed);    // Control right motor speed
  digitalWrite(7, HIGH);    // Set left motor to forward direction
  analogWrite(6, speed);    // Control left motor speed
  digitalWrite(3, HIGH);    // Enable motors
}

void Stop() {
  analogWrite(5, 0);        // Stop right motor
  analogWrite(6, 0);        // Stop left motor
  digitalWrite(3, LOW);     // Disable motors
}

void Left() {
  digitalWrite(8, LOW);     // Set right motor to reverse direction
  analogWrite(5, speed);    // Control right motor speed
  digitalWrite(7, HIGH);    // Set left motor to forward direction
  analogWrite(6, speed);    // Control left motor speed
  digitalWrite(3, HIGH);    // Enable motors
}

void Right() { 
  digitalWrite(8, HIGH);    // Set right motor to forward direction
  analogWrite(5, speed);    // Control right motor speed
  digitalWrite(7, LOW);     // Set left motor to reverse direction
  analogWrite(6, speed);    // Control left motor speed
  digitalWrite(3, HIGH);    // Enable motors
}
